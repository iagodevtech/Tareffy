import emailjs from '@emailjs/browser';
import { EMAILJS_CONFIG } from '../config/emailjs';

export class EmailRecipientTester {
  static async testRecipientParameters() {
    console.log('üîç Testando par√¢metros de destinat√°rio...');
    
    // Teste 1: Par√¢metro to_email (padr√£o)
    try {
      console.log('üìß Teste 1: Usando to_email...');
      const response1 = await emailjs.send(
        EMAILJS_CONFIG.SERVICE_ID,
        EMAILJS_CONFIG.TEMPLATE_ID_TEAM_INVITE,
        {
          to_email: 'teste@exemplo.com',
          team_name: 'Equipe Teste',
          role: 'Membro',
          inviter_name: 'Usu√°rio Teste',
          app_url: 'https://iagodevtech.github.io/Tareffy/login'
        }
      );
      console.log('‚úÖ Sucesso com to_email:', response1);
      return true;
    } catch (error: any) {
      console.log('‚ùå Erro com to_email:', error);
    }

    // Teste 2: Par√¢metro to (alternativo)
    try {
      console.log('üìß Teste 2: Usando to...');
      const response2 = await emailjs.send(
        EMAILJS_CONFIG.SERVICE_ID,
        EMAILJS_CONFIG.TEMPLATE_ID_TEAM_INVITE,
        {
          to: 'teste@exemplo.com',
          team_name: 'Equipe Teste',
          role: 'Membro',
          inviter_name: 'Usu√°rio Teste',
          app_url: 'https://iagodevtech.github.io/Tareffy/login'
        }
      );
      console.log('‚úÖ Sucesso com to:', response2);
      return true;
    } catch (error: any) {
      console.log('‚ùå Erro com to:', error);
    }

    // Teste 3: Par√¢metro email (alternativo)
    try {
      console.log('üìß Teste 3: Usando email...');
      const response3 = await emailjs.send(
        EMAILJS_CONFIG.SERVICE_ID,
        EMAILJS_CONFIG.TEMPLATE_ID_TEAM_INVITE,
        {
          email: 'teste@exemplo.com',
          team_name: 'Equipe Teste',
          role: 'Membro',
          inviter_name: 'Usu√°rio Teste',
          app_url: 'https://iagodevtech.github.io/Tareffy/login'
        }
      );
      console.log('‚úÖ Sucesso com email:', response3);
      return true;
    } catch (error: any) {
      console.log('‚ùå Erro com email:', error);
    }

    // Teste 4: Par√¢metro user_email (alternativo)
    try {
      console.log('üìß Teste 4: Usando user_email...');
      const response4 = await emailjs.send(
        EMAILJS_CONFIG.SERVICE_ID,
        EMAILJS_CONFIG.TEMPLATE_ID_TEAM_INVITE,
        {
          user_email: 'teste@exemplo.com',
          team_name: 'Equipe Teste',
          role: 'Membro',
          inviter_name: 'Usu√°rio Teste',
          app_url: 'https://iagodevtech.github.io/Tareffy/login'
        }
      );
      console.log('‚úÖ Sucesso com user_email:', response4);
      return true;
    } catch (error: any) {
      console.log('‚ùå Erro com user_email:', error);
    }

    // Teste 5: Par√¢metro recipient_email (alternativo)
    try {
      console.log('üìß Teste 5: Usando recipient_email...');
      const response5 = await emailjs.send(
        EMAILJS_CONFIG.SERVICE_ID,
        EMAILJS_CONFIG.TEMPLATE_ID_TEAM_INVITE,
        {
          recipient_email: 'teste@exemplo.com',
          team_name: 'Equipe Teste',
          role: 'Membro',
          inviter_name: 'Usu√°rio Teste',
          app_url: 'https://iagodevtech.github.io/Tareffy/login'
        }
      );
      console.log('‚úÖ Sucesso com recipient_email:', response5);
      return true;
    } catch (error: any) {
      console.log('‚ùå Erro com recipient_email:', error);
    }

    return false;
  }

  static async testTemplateConfiguration() {
    console.log('üîç Testando configura√ß√£o do template...');
    
    // Teste com par√¢metros m√≠nimos
    try {
      console.log('üìß Teste: Par√¢metros m√≠nimos...');
      const response = await emailjs.send(
        EMAILJS_CONFIG.SERVICE_ID,
        EMAILJS_CONFIG.TEMPLATE_ID_TEAM_INVITE,
        {
          to_email: 'teste@exemplo.com'
        }
      );
      console.log('‚úÖ Sucesso com par√¢metros m√≠nimos:', response);
      return true;
    } catch (error: any) {
      console.log('‚ùå Erro com par√¢metros m√≠nimos:', error);
    }

    // Teste com par√¢metros vazios
    try {
      console.log('üìß Teste: Par√¢metros vazios...');
      const response = await emailjs.send(
        EMAILJS_CONFIG.SERVICE_ID,
        EMAILJS_CONFIG.TEMPLATE_ID_TEAM_INVITE,
        {}
      );
      console.log('‚úÖ Sucesso com par√¢metros vazios:', response);
      return true;
    } catch (error: any) {
      console.log('‚ùå Erro com par√¢metros vazios:', error);
    }

    return false;
  }
}
